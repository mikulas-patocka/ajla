{*
 * No-copyright
 * A table of numbers, generated by a script, is supposedly not copyrightable.
 *}

private unit pcode;

type pcode_t := sint32;
type u_pcode_t := uint32;

const P_BinaryOp := 1;
const P_UnaryOp := 2;
const P_Copy := 3;
const P_Copy_Type_Cast := 4;
const P_Free := 5;
const P_Eval := 6;
const P_Keep := 7;
const P_Fn := 8;
const P_Load_Local_Type := 9;
const P_Load_Fn := 10;
const P_Curry := 11;
const P_Call := 12;
const P_Call_Indirect := 13;
const P_Load_Const := 14;
const P_Structured_Write := 15;
const P_Record_Type := 16;
const P_Option_Type := 17;
const P_Record_Create := 18;
const P_Record_Load_Slot := 19;
const P_Record_Load := 20;
const P_Option_Create := 21;
const P_Option_Load := 22;
const P_Option_Test := 23;
const P_Option_Ord := 24;
const P_Array_Flexible := 25;
const P_Array_Fixed := 26;
const P_Array_Create := 27;
const P_Array_Fill := 28;
const P_Array_String := 29;
const P_Array_Unicode := 30;
const P_Array_Load := 31;
const P_Array_Len := 32;
const P_Array_Len_Greater_Than := 33;
const P_Array_Sub := 34;
const P_Array_Skip := 35;
const P_Array_Append := 36;
const P_Array_Append_One := 37;
const P_Array_Flatten := 38;
const P_Jmp := 39;
const P_Jmp_False := 40;
const P_Label := 41;
const P_IO := 42;
const P_Args := 43;
const P_Return_Vars := 44;
const P_Return := 45;
const P_Checkpoint := 46;
const P_Line_Info := 47;
const P_Phi := 48;
const P_Pcode_N := 49;

const T_Type := -1;
const T_SInt8 := -2;
const T_UInt8 := -3;
const T_SInt16 := -4;
const T_UInt16 := -5;
const T_SInt32 := -6;
const T_UInt32 := -7;
const T_SInt64 := -8;
const T_UInt64 := -9;
const T_SInt128 := -10;
const T_UInt128 := -11;
const T_Integer := -12;
const T_Integer8 := -13;
const T_Integer16 := -14;
const T_Integer32 := -15;
const T_Integer64 := -16;
const T_Integer128 := -17;
const T_Real16 := -18;
const T_Real32 := -19;
const T_Real64 := -20;
const T_Real80 := -21;
const T_Real128 := -22;
const T_EmptyOption := -23;
const T_FlatOption := -24;
const T_Undetermined := -25;
const T_TypeOfType := -26;
const T_Record := -27;
const T_UnknownType := -28;
const T_InvalidType := -29;
const T_InferredType := -30;

const Structured_Record := 1;
const Structured_Option := 2;
const Structured_Array := 3;

const VarFlag_Must_Be_Flat := 1;
const VarFlag_Must_Be_Data := 2;

const Flag_Free_Argument := 1;
const Flag_Evaluate := 2;
const Flag_Borrow := 4;
const Flag_Array_Fill_Sparse := 8;
const Flag_Op_Strict := 16;
const Flag_Return_Elided := 32;
const Flag_Index_In_Range := 64;
const Flag_Fused_Bin_Jmp := 128;

const Bin_Add := 0;
const Bin_Subtract := 1;
const Bin_Multiply := 2;
const Bin_Divide_Int := 3;
const Bin_Divide_Real := 4;
const Bin_Modulo := 5;
const Bin_Power := 6;
const Bin_Atan2 := 7;
const Bin_And := 8;
const Bin_Or := 9;
const Bin_Xor := 10;
const Bin_Shl := 11;
const Bin_Shr := 12;
const Bin_Rol := 13;
const Bin_Ror := 14;
const Bin_Bts := 15;
const Bin_Btr := 16;
const Bin_Btc := 17;
const Bin_Equal := 18;
const Bin_NotEqual := 19;
const Bin_Less := 20;
const Bin_LessEqual := 21;
const Bin_Bt := 22;
const Un_Not := 23;
const Un_Neg := 24;
const Un_Inc := 25;
const Un_Dec := 26;
const Un_Bswap := 27;
const Un_Brev := 28;
const Un_Bsf := 29;
const Un_Bsr := 30;
const Un_Popcnt := 31;
const Un_Sqrt := 32;
const Un_Cbrt := 33;
const Un_Sin := 34;
const Un_Cos := 35;
const Un_Tan := 36;
const Un_Asin := 37;
const Un_Acos := 38;
const Un_Atan := 39;
const Un_Sinh := 40;
const Un_Cosh := 41;
const Un_Tanh := 42;
const Un_Asinh := 43;
const Un_Acosh := 44;
const Un_Atanh := 45;
const Un_Exp2 := 46;
const Un_Exp := 47;
const Un_Exp10 := 48;
const Un_Log2 := 49;
const Un_Log := 50;
const Un_Log10 := 51;
const Un_Round := 52;
const Un_Floor := 53;
const Un_Ceil := 54;
const Un_Trunc := 55;
const Un_Fract := 56;
const Un_Mantissa := 57;
const Un_Exponent := 58;
const Un_NextNumber := 59;
const Un_PrevNumber := 60;
const Un_ConvertToInt := 61;
const Un_ConvertFromInt := 62;
const Un_IsException := 63;
const Un_ExceptionClass := 64;
const Un_ExceptionType := 65;
const Un_ExceptionAux := 66;
const Un_SystemProperty := 67;
const Op_N := 68;

const Fn_Function := 1;
const Fn_Record := 2;
const Fn_Option := 3;
const Fn_Mask := 3;

const Local_Type_Record := 0;
const Local_Type_Flat_Record := 1;
const Local_Type_Flat_Array := 2;

const Call_Mode_Unspecified := 0;
const Call_Mode_Normal := 1;
const Call_Mode_Strict := 2;
const Call_Mode_Spark := 3;
const Call_Mode_Lazy := 4;
const Call_Mode_Inline := 5;
const Call_Mode_Cache := 6;
const Call_Mode_Save := 7;
const Call_Mode_Type := 8;
const Call_Mode_Flat := 9;

const SystemProperty_OS := 1;
const SystemProperty_Charset := 2;
const SystemProperty_Charset_Console := 3;
const SystemProperty_Fixed := 4;
const SystemProperty_Real := 5;
const SystemProperty_Privileged := 6;
const SystemProperty_Compile := 7;

const SystemProperty_OS_Posix := 1;
const SystemProperty_OS_DOS := 2;
const SystemProperty_OS_OS2 := 3;
const SystemProperty_OS_Cygwin := 4;
const SystemProperty_OS_Windows := 5;

const IO_Exception_Make := 0;
const IO_Exception_String := 1;
const IO_Exception_Payload := 2;
const IO_Exception_Stack := 3;
const IO_N_Std_Handles := 4;
const IO_Get_Std_Handle := 5;
const IO_Get_Args := 6;
const IO_Get_Environment := 7;
const IO_Stream_Open_Read := 8;
const IO_Stream_Read_Partial := 9;
const IO_Stream_Open_Write := 10;
const IO_Stream_Write := 11;
const IO_Read_Console_Packet := 12;
const IO_Write_Console_Packet := 13;
const IO_Pipe := 14;
const IO_Block_Open := 15;
const IO_Block_Read := 16;
const IO_Block_Write := 17;
const IO_LSeek := 18;
const IO_FTruncate := 19;
const IO_FAllocate := 20;
const IO_CloneRange := 21;
const IO_FSync := 22;
const IO_Sync := 23;
const IO_Root_Dir := 24;
const IO_Lib_Path := 25;
const IO_Open_Dir := 26;
const IO_Read_Dir := 27;
const IO_Dir_Path := 28;
const IO_DMonitor_Prepare := 29;
const IO_DMonitor_Wait := 30;
const IO_Stat := 31;
const IO_FStat := 32;
const IO_FStatFS := 33;
const IO_DStatFS := 34;
const IO_ReadLink := 35;
const IO_Dir_Action := 36;
const IO_Dir2_Action := 37;
const IO_Drives := 38;
const IO_Stty := 39;
const IO_Tty_Size := 40;
const IO_Tty_Background := 41;
const IO_Tty_Foreground := 42;
const IO_UName := 43;
const IO_GetHostName := 44;
const IO_Spawn := 45;
const IO_Wait := 46;
const IO_GetTime := 47;
const IO_TimeToCalendar := 48;
const IO_CalendarToTime := 49;
const IO_Sleep := 50;
const IO_Any := 51;
const IO_Never := 52;
const IO_Fork := 53;
const IO_Atomic_Enter := 54;
const IO_Atomic_Exit := 55;
const IO_Wait_For_Dereferenced := 56;
const IO_Int_To_Native := 57;
const IO_Native_To_Int := 58;
const IO_Socket := 59;
const IO_Connect := 60;
const IO_Connect_Wait := 61;
const IO_Bind := 62;
const IO_Listen := 63;
const IO_Accept := 64;
const IO_Get_Sock_Name := 65;
const IO_Get_Peer_Name := 66;
const IO_Recv_From := 67;
const IO_Send_To := 68;
const IO_Get_Sock_Opt := 69;
const IO_Set_Sock_Opt := 70;
const IO_Get_Addr_Info := 71;
const IO_Get_Name_Info := 72;
const IO_MsgQueue_New := 73;
const IO_MsgQueue_Send := 74;
const IO_MsgQueue_Receive := 75;
const IO_MsgQueue_Wait := 76;
const IO_MsgQueue_Is_Nonempty := 77;
const IO_Signal_Handle := 78;
const IO_Signal_Prepare := 79;
const IO_Signal_Wait := 80;
const IO_Consume_Parameters := 81;
const IO_Load_Program := 82;
const IO_Get_Function_Ptr := 83;
const IO_Get_SubFunctions := 84;
const IO_Load_Optimized_Pcode := 85;
const IO_Register_Dependence := 86;
const IO_Deep_Eval := 87;
const IO_Evaluate := 88;
const IO_Debug := 89;
const IO_StackTrace := 90;
const IO_TraceCtl := 91;
const IO_FFI_Get_Size_Alignment := 92;
const IO_FFI_Create_Structure := 93;
const IO_FFI_Structure_Offset := 94;
const IO_FFI_Poke := 95;
const IO_FFI_Peek := 96;
const IO_FFI_Poke_Array := 97;
const IO_FFI_Peek_Array := 98;
const IO_FFI_Handle_To_Number := 99;
const IO_FFI_Number_To_Handle := 100;
const IO_FFI_Create_Function := 101;
const IO_FFI_Call_Function := 102;
const IO_FFI_Encode_Real := 103;
const IO_FFI_Decode_Real := 104;
const IO_FFI_Destructor_New := 105;
const IO_FFI_Destructor_Allocate := 106;
const IO_FFI_Destructor_Free := 107;
const IO_FFI_Destructor_Call := 108;
const IO_N := 109;

const IO_Open_Flag_Read := 1;
const IO_Open_Flag_Write := 2;
const IO_Open_Flag_Append := 4;
const IO_Open_Flag_Create := 8;
const IO_Open_Flag_Must_Create := 16;
const IO_Open_Flag_No_Follow := 32;
const IO_Open_Flag_N := 64;

const IO_Stat_Flag_DevMajor := 1;
const IO_Stat_Flag_DevMinor := 2;
const IO_Stat_Flag_Inode := 4;
const IO_Stat_Flag_Type := 8;
const IO_Stat_Flag_Mode := 16;
const IO_Stat_Flag_NLink := 32;
const IO_Stat_Flag_UID := 64;
const IO_Stat_Flag_GID := 128;
const IO_Stat_Flag_RDevMajor := 256;
const IO_Stat_Flag_RDevMinor := 512;
const IO_Stat_Flag_Size := 1024;
const IO_Stat_Flag_OptimalIOSize := 2048;
const IO_Stat_Flag_Allocated := 4096;
const IO_Stat_Flag_ATime := 8192;
const IO_Stat_Flag_MTime := 16384;
const IO_Stat_Flag_CTime := 32768;

const IO_Stat_Type_File := 1;
const IO_Stat_Type_Directory := 2;
const IO_Stat_Type_Link := 3;
const IO_Stat_Type_Pipe := 4;
const IO_Stat_Type_CharDev := 5;
const IO_Stat_Type_BlockDev := 6;
const IO_Stat_Type_Socket := 7;

const IO_StatFS_Flag_BSize := 1;
const IO_StatFS_Flag_FrSize := 2;
const IO_StatFS_Flag_FrTotal := 4;
const IO_StatFS_Flag_FrFree := 8;
const IO_StatFS_Flag_FrAvail := 16;
const IO_StatFS_Flag_InTotal := 32;
const IO_StatFS_Flag_InFree := 64;
const IO_StatFS_Flag_InAvail := 128;
const IO_StatFS_Flag_FSId := 256;
const IO_StatFS_Flag_Flags := 512;
const IO_StatFS_Flag_NameLen := 1024;

const IO_StatFS_ST_ReadOnly := 1;
const IO_StatFS_ST_NoSuid := 2;
const IO_StatFS_ST_NoDev := 4;
const IO_StatFS_ST_NoExec := 8;
const IO_StatFS_ST_Synchronous := 16;
const IO_StatFS_ST_MandLock := 32;
const IO_StatFS_ST_NoAtime := 64;
const IO_StatFS_ST_NoDirAtime := 128;
const IO_StatFS_ST_RelAtime := 256;

const IO_UName_Flag_Ajla_Version := 1;
const IO_UName_Flag_Flavor := 2;
const IO_UName_Flag_System := 4;
const IO_UName_Flag_Release := 8;
const IO_UName_Flag_Version := 16;
const IO_UName_Flag_Machine := 32;

const IO_Action_Rm := 1;
const IO_Action_Rm_Dir := 2;
const IO_Action_Mk_Dir := 3;
const IO_Action_Mk_Pipe := 4;
const IO_Action_Mk_Socket := 5;
const IO_Action_Mk_CharDev := 6;
const IO_Action_Mk_BlockDev := 7;
const IO_Action_Mk_SymLink := 8;
const IO_Action_Mk_Link := 9;
const IO_Action_Rename := 10;
const IO_Action_ChMod := 11;
const IO_Action_ChOwn := 12;
const IO_Action_LChOwn := 13;
const IO_Action_UTime := 14;
const IO_Action_LUTime := 15;

const IO_Stty_Flag_Raw := 1;
const IO_Stty_Flag_Noecho := 2;
const IO_Stty_Flag_Nosignal := 4;
const IO_Stty_Flag_NoCRLF := 8;

const EC_N := 5;

const AJLA_ERROR_BASE := 1;
const AJLA_ERROR_N := 35;

const SYSTEM_ERROR_BASE := 1;
const SYSTEM_ERROR_N := 132;

fn pcode_name(p : int) : bytes;
fn name_to_value~cache : list(int);

implementation

fn pcode_name(p : int) : bytes
[
	if p = P_BinaryOp then return "BinaryOp";
	if p = P_UnaryOp then return "UnaryOp";
	if p = P_Copy then return "Copy";
	if p = P_Copy_Type_Cast then return "Copy_Type_Cast";
	if p = P_Free then return "Free";
	if p = P_Eval then return "Eval";
	if p = P_Keep then return "Keep";
	if p = P_Fn then return "Fn";
	if p = P_Load_Local_Type then return "Load_Local_Type";
	if p = P_Load_Fn then return "Load_Fn";
	if p = P_Curry then return "Curry";
	if p = P_Call then return "Call";
	if p = P_Call_Indirect then return "Call_Indirect";
	if p = P_Load_Const then return "Load_Const";
	if p = P_Structured_Write then return "Structured_Write";
	if p = P_Record_Type then return "Record_Type";
	if p = P_Option_Type then return "Option_Type";
	if p = P_Record_Create then return "Record_Create";
	if p = P_Record_Load_Slot then return "Record_Load_Slot";
	if p = P_Record_Load then return "Record_Load";
	if p = P_Option_Create then return "Option_Create";
	if p = P_Option_Load then return "Option_Load";
	if p = P_Option_Test then return "Option_Test";
	if p = P_Option_Ord then return "Option_Ord";
	if p = P_Array_Flexible then return "Array_Flexible";
	if p = P_Array_Fixed then return "Array_Fixed";
	if p = P_Array_Create then return "Array_Create";
	if p = P_Array_Fill then return "Array_Fill";
	if p = P_Array_String then return "Array_String";
	if p = P_Array_Unicode then return "Array_Unicode";
	if p = P_Array_Load then return "Array_Load";
	if p = P_Array_Len then return "Array_Len";
	if p = P_Array_Len_Greater_Than then return "Array_Len_Greater_Than";
	if p = P_Array_Sub then return "Array_Sub";
	if p = P_Array_Skip then return "Array_Skip";
	if p = P_Array_Append then return "Array_Append";
	if p = P_Array_Append_One then return "Array_Append_One";
	if p = P_Array_Flatten then return "Array_Flatten";
	if p = P_Jmp then return "Jmp";
	if p = P_Jmp_False then return "Jmp_False";
	if p = P_Label then return "Label";
	if p = P_IO then return "IO";
	if p = P_Args then return "Args";
	if p = P_Return_Vars then return "Return_Vars";
	if p = P_Return then return "Return";
	if p = P_Checkpoint then return "Checkpoint";
	if p = P_Line_Info then return "Line_Info";
	if p = P_Phi then return "Phi";
	if p = P_Pcode_N then return "Pcode_N";
	return "Unknown code " + ntos(p);
]

fn name_to_value~cache : list(int)
[
	var a := infinite_uninitialized(int);

	a[#85A7761E5E67F0] := 1;						// BinaryOp
	a[#157761E5E67F0] := 2;							// UnaryOp
	a[#87BF879] := 3;							// Copy
	a[#21EFE1E6FD4F3C32DF87879F4] := 4;					// Copy_Type_Cast
	a[#8DCB2E5] := 5;							// Free
	a[#8BDB0EC] := 6;							// Eval
	a[#97972F0] := 7;							// Keep
	a[#236E] := 8;								// Fn
	a[#1337E1C97E66FC78765FA9E7865] := 9;					// Load_Local_Type
	a[#1337E1C97E36E] := 10;						// Load_Fn
	a[#43EBCB979] := 11;							// Curry
	a[#878766C] := 12;							// Call
	a[#43C3B365F93BB269E5971F4] := 13;					// Call_Indirect
	a[#266FC392FC3DFBB9F4] := 14;						// Load_Const
	a[#A7D3975C7D3AF2CB92FD7E5A7A65] := 15;					// Structured_Write
	a[#14B2E3DFCB25FA9E7865] := 16;						// Record_Type
	a[#13F874D3BF75FA9E7865] := 17;						// Option_Type
	a[#52CB8F7F2C97E1F2CB87A65] := 18;					// Record_Create
	a[#A5971EFE592FCCDF8725FA7B37F4] := 19;					// Record_Load_Slot
	a[#14B2E3DFCB25F99BF0E4] := 20;						// Record_Load
	a[#4FE1D34EFDD7E1F2CB87A65] := 21;					// Option_Create
	a[#13F874D3BF75F99BF0E4] := 22;						// Option_Load
	a[#13F874D3BF75FA9979F4] := 23;						// Option_Test
	a[#27F0E9A77EEBF3F964] := 24;						// Option_Ord
	a[#20F2E587CDF8DB32F8D38B665] := 25;					// Array_Flexible
	a[#107972C3E6FC6D3E32E4] := 26;						// Array_Fixed
	a[#83CB961F37E1F2CB87A65] := 27;					// Array_Create
	a[#20F2E587CDF8DA766C] := 28;						// Array_Fill
	a[#83CB961F37E9F4E5A7767] := 29;					// Array_String
	a[#41E5CB0F9BF57769C7BF265] := 30;					// Array_Unicode
	a[#20F2E587CDF99BF0E4] := 31;						// Array_Load
	a[#41E5CB0F9BF332EE] := 32;						// Array_Len
	a[#20F2E587CDF999775F8FCB2E1E99795FA9A30EE] := 33;			// Array_Len_Greater_Than
	a[#41E5CB0F9BF4FAE2] := 34;						// Array_Sub
	a[#20F2E587CDFA7AF4F0] := 35;						// Array_Skip
	a[#83CB961F37E0F0E197764] := 36;					// Array_Append
	a[#83CB961F37E0F0E197764BF3F765] := 37;					// Array_Append_One
	a[#41E5CB0F9BF1B661E9D32EE] := 38;					// Array_Flatten
	a[#12B6F0] := 39;							// Jmp
	a[#4ADBC2FC6C3B39E5] := 40;						// Jmp_False
	a[#4CC38B2EC] := 41;							// Label
	a[#24CF] := 42;								// IO
	a[#83CB3F3] := 43;							// Args
	a[#14B2F4EBCB75FAD87973] := 44;						// Return_Vars
	a[#2965E9D796E] := 45;							// Return
	a[#21E8CB8F5F0DFA7774] := 46;						// Checkpoint
	a[#4CD3BB2DF93BB36F] := 47;						// Line_Info
	a[#143469] := 48;							// Phi
	a[#1431EFC996FCE] := 49;						// Pcode_N

	a[#A9E7865] := -1;							// Type
	a[#5393BBA38] := -2;							// SInt8
	a[#5593BBA38] := -3;							// UInt8
	a[#29C9DDD18B6] := -4;							// SInt16
	a[#2AC9DDD18B6] := -5;							// UInt16
	a[#29C9DDD19B2] := -6;							// SInt32
	a[#2AC9DDD19B2] := -7;							// UInt32
	a[#29C9DDD1B34] := -8;							// SInt64
	a[#2AC9DDD1B34] := -9;							// UInt64
	a[#14E4EEE8C5938] := -10;						// SInt128
	a[#1564EEE8C5938] := -11;						// UInt128
	a[#127774CB9F2F2] := -12;						// Integer
	a[#93BBA65CF97938] := -13;						// Integer8
	a[#49DDD32E7CBC98B6] := -14;						// Integer16
	a[#49DDD32E7CBC99B2] := -15;						// Integer32
	a[#49DDD32E7CBC9B34] := -16;						// Integer64
	a[#24EEE9973E5E4C5938] := -17;						// Integer128
	a[#2965C3B18B6] := -18;							// Real16
	a[#2965C3B19B2] := -19;							// Real32
	a[#2965C3B1B34] := -20;							// Real64
	a[#2965C3B1C30] := -21;							// Real80
	a[#14B2E1D8C5938] := -22;						// Real128
	a[#1176F0E9E67F0E9A77EE] := -23;					// EmptyOption
	a[#236CC3D27F0E9A77EE] := -24;						// FlatOption
	a[#ABBB265E99796DD3BB2E4] := -25;					// Undetermined
	a[#2A79E1967E6A9E7865] := -26;						// TypeOfType
	a[#2965C7BF964] := -27;							// Record
	a[#15776BDDBFBEEA9E7865] := -28;					// UnknownType
	a[#127776C3B34E4A9E7865] := -29;					// InvalidType
	a[#93BB365E5CB2E4A9E7865] := -30;					// InferredType

	a[#53E9CBAE3E9D7965C97E965C7BF964] := 1;				// Structured_Record
	a[#53E9CBAE3E9D7965C97E7F0E9A77EE] := 2;				// Structured_Option
	a[#A7D3975C7D3AF2CB92FC1E5CB0F9] := 3;					// Structured_Array

	a[#AD87946D9873DF9BD79F4BF0B2DF8DB30F4] := 1;				// VarFlag_Must_Be_Flat
	a[#AD87946D9873DF9BD79F4BF0B2DF8987A61] := 2;				// VarFlag_Must_Be_Data

	a[#236CC39EFC6E5972DF83CB3F5DB97774] := 1;				// Flag_Free_Argument
	a[#46D9873DF8BDB0ECEB87A65] := 2;					// Flag_Evaluate
	a[#11B661CF7E16FE5CB7F7] := 4;						// Flag_Borrow
	a[#236CC39EFC1E5CB0F9BF1B4ECD97E9F0C3CB9E5] := 8;			// Flag_Array_Fill_Sparse
	a[#236CC39EFCFE17E9F4E5A71F4] := 16;					// Flag_Op_Strict
	a[#236CC39EFD2CBD3AF2DD7E2ECD3932E4] := 32;				// Flag_Return_Elided
	a[#11B661CF7E4EEC997C5F93BAFD2C3BB3E5] := 64;				// Flag_Index_In_Range
	a[#236CC39EFC6EBCF2E4BF0B4EEBF2B6F0] := 128;				// Flag_Fused_Bin_Jmp

	a[#10B4EEBF07264] := 0;							// Bin_Add
	a[#85A775FA7D7174E5871F4] := 1;						// Bin_Subtract
	a[#85A775F9BD7674D3C3679] := 2;						// Bin_Multiply
	a[#2169DD7E269EDA7265BF27774] := 3;					// Bin_Divide_Int
	a[#10B4EEBF134F6D3932DFA5970EC] := 4;					// Bin_Divide_Real
	a[#2169DD7E6EFC9D766F] := 5;						// Bin_Modulo
	a[#42D3BAFD0DFDF2F2] := 6;						// Bin_Power
	a[#42D3BAFC1E987732] := 7;						// Bin_Atan2
	a[#10B4EEBF07764] := 8;							// Bin_And
	a[#2169DD7E7F2] := 9;							// Bin_Or
	a[#10B4EEBF637F2] := 10;						// Bin_Xor
	a[#10B4EEBF4F46C] := 11;						// Bin_Shl
	a[#10B4EEBF4F472] := 12;						// Bin_Shr
	a[#10B4EEBF4B7EC] := 13;						// Bin_Rol
	a[#10B4EEBF4B7F2] := 14;						// Bin_Ror
	a[#10B4EEBF0BA73] := 15;						// Bin_Bts
	a[#10B4EEBF0BA72] := 16;						// Bin_Btr
	a[#10B4EEBF0BA63] := 17;						// Bin_Btc
	a[#42D3BAFC5E3D70EC] := 18;						// Bin_Equal
	a[#85A775F9DBFA45E3D70EC] := 19;					// Bin_NotEqual
	a[#85A775F99979F3] := 20;						// Bin_Less
	a[#42D3BAFCCCBCF9C5E3D70EC] := 21;					// Bin_LessEqual
	a[#2169DD7E174] := 22;							// Bin_Bt
	a[#2AEEBF3B7F4] := 23;							// Un_Not
	a[#2AEEBF3B2E7] := 24;							// Un_Neg
	a[#2AEEBF27763] := 25;							// Un_Inc
	a[#2AEEBF132E3] := 26;							// Un_Dec
	a[#ABBAFC2E7DF0F0] := 27;						// Un_Bswap
	a[#15775F85CB2F6] := 28;						// Un_Brev
	a[#2AEEBF0B9E6] := 29;							// Un_Bsf
	a[#2AEEBF0B9F2] := 30;							// Un_Bsr
	a[#55DD7E86FE18F774] := 31;						// Un_Popcnt
	a[#15775FA7C7974] := 32;						// Un_Sqrt
	a[#15775F878B974] := 33;						// Un_Cbrt
	a[#2AEEBF4F4EE] := 34;							// Un_Sin
	a[#2AEEBF0F7F3] := 35;							// Un_Cos
	a[#2AEEBF530EE] := 36;							// Un_Tan
	a[#15775F83CF4EE] := 37;						// Un_Asin
	a[#15775F838F7F3] := 38;						// Un_Acos
	a[#15775F83D30EE] := 39;						// Un_Atan
	a[#15775FA7A7768] := 40;						// Un_Sinh
	a[#15775F87BF9E8] := 41;						// Un_Cosh
	a[#15775FA987768] := 42;						// Un_Tanh
	a[#ABBAFC1E7A7768] := 43;						// Un_Asinh
	a[#ABBAFC1C7BF9E8] := 44;						// Un_Acosh
	a[#ABBAFC1E987768] := 45;						// Un_Atanh
	a[#15775F8BE3832] := 46;						// Un_Exp2
	a[#2AEEBF17C70] := 47;							// Un_Exp
	a[#ABBAFC5F1C18B0] := 48;						// Un_Exp10
	a[#15775F99BF3B2] := 49;						// Un_Log2
	a[#2AEEBF337E7] := 50;							// Un_Log
	a[#ABBAFCCDF9D8B0] := 51;						// Un_Log10
	a[#ABBAFD2DFD7764] := 52;						// Un_Round
	a[#ABBAFC6D9BF7F2] := 53;						// Un_Floor
	a[#15775F87974EC] := 54;						// Un_Ceil
	a[#ABBAFD4E5D7763] := 55;						// Un_Trunc
	a[#ABBAFC6E5871F4] := 56;						// Un_Fract
	a[#15775F9B87774D3CF9E1] := 57;						// Un_Mantissa
	a[#15775F8BE386FDD97774] := 58;						// Un_Exponent
	a[#55DD7E765F1D2775DB8B2F2] := 59;					// Un_NextNumber
	a[#55DD7E872CBDA775DB8B2F2] := 60;					// Un_PrevNumber
	a[#15775F87BF776CBCBA54DF27774] := 61;					// Un_ConvertToInt
	a[#55DD7E1EFDDDB2F2E91B96FDB27774] := 62;				// Un_ConvertFromInt
	a[#2AEEBF279C5F18F2F0E9A77EE] := 63;					// Un_IsException
	a[#55DD7E2F8C797874D3BF743D9879F3] := 64;				// Un_ExceptionClass
	a[#ABBAFC5F18F2F0E9A77EEA9E7865] := 65;					// Un_ExceptionType
	a[#15775F8BE31E5E1D34EFDD07AF8] := 66;					// Un_ExceptionAux
	a[#55DD7E9F9E7D32EDA1CB7F0CBCBA79] := 67;				// Un_SystemProperty
	a[#9FC2FCE] := 68;							// Op_N

	a[#11B75F8DD7763E9A77EE] := 1;						// Fn_Function
	a[#46DD7E965C7BF964] := 2;						// Fn_Record
	a[#46DD7E7F0E9A77EE] := 3;						// Fn_Option
	a[#11B75F9B879EB] := 3;							// Fn_Mask

	a[#4CDF8F0ECBF53CF0CB7E965C7BF964] := 0;				// Local_Type_Record
	a[#266FC78765FA9E7865BF1B661E97E965C7BF964] := 1;			// Local_Type_Flat_Record
	a[#4CDF8F0ECBF53CF0CB7E36CC3D2FC1E5CB0F9] := 2;				// Local_Type_Flat_Array

	a[#43C3B365F9BBF265BF57773E1971E9CDA72E4] := 0;				// Call_Mode_Unspecified
	a[#878766CBF377E4CB7E76FE5B70EC] := 1;					// Call_Mode_Normal
	a[#878766CBF377E4CB7E9F4E5A71F4] := 2;					// Call_Mode_Strict
	a[#10F0ECD97E6EFC996FD3E18796B] := 3;					// Call_Mode_Spark
	a[#21E1D9B2FCDDF932DF9987D79] := 4;					// Call_Mode_Lazy
	a[#878766CBF377E4CB7E4EED9A7765] := 5;					// Call_Mode_Inline
	a[#10F0ECD97E6EFC996FC3C38F465] := 6;					// Call_Mode_Cache
	a[#21E1D9B2FCDDF932DFA787B65] := 7;					// Call_Mode_Save
	a[#21E1D9B2FCDDF932DFA9E7865] := 8;					// Call_Mode_Type
	a[#21E1D9B2FCDDF932DF8DB30F4] := 9;					// Call_Mode_Flat

	a[#53F3CFA65DB4396FE197974F37E7D3] := 1;				// SystemProperty_OS
	a[#29F9E7D32EDA1CB7F0CBCBA79BF0F461E5CF2F4] := 2;			// SystemProperty_Charset
	a[#29F9E7D32EDA1CB7F0CBCBA79BF0F461E5CF2F4BF0F7EEE7BF665] := 3;		// SystemProperty_Charset_Console
	a[#A7E79F4CBB6872DFC32F2E9E6FC6D3E32E4] := 4;				// SystemProperty_Fixed
	a[#14FCF3E9976D0E5BF865E5D3CDFA5970EC] := 5;				// SystemProperty_Real
	a[#53F3CFA65DB4396FE197974F37E872D3DB4ECCB9F2E4] := 6;			// SystemProperty_Privileged
	a[#29F9E7D32EDA1CB7F0CBCBA79BF0F7EDE1A7665] := 7;			// SystemProperty_Compile

	a[#14FCF3E9976D0E5BF865E5D3CDF9F4EFD0DFCF4F8] := 1;			// SystemProperty_OS_Posix
	a[#53F3CFA65DB4396FE197974F37E7D3BF127D3] := 2;				// SystemProperty_OS_DOS
	a[#53F3CFA65DB4396FE197974F37E7D3BF3E9B2] := 3;				// SystemProperty_OS_OS2
	a[#A7E79F4CBB6872DFC32F2E9E6FCFA77E1F9CFDF4EE] := 4;			// SystemProperty_OS_Cygwin
	a[#53F3CFA65DB4396FE197974F37E7D3BF5F4EEC9BFBF3] := 5;			// SystemProperty_OS_Windows

	a[#499F7E2F8C797874D3BF75F9B875E5] := 0;				// IO_Exception_Make
	a[#1267DF8BE31E5E1D34EFDD7E9F4E5A7767] := 1;				// IO_Exception_String
	a[#933EFC5F18F2F0E9A77EEBF430F9D9BF0E4] := 2;				// IO_Exception_Payload
	a[#24CFBF17C63CBC3A69DFBAFD3E9871EB] := 3;				// IO_Exception_Stack
	a[#933EFCEBF4FA64BF230EEC9B32F3] := 4;					// IO_N_Std_Handles
	a[#499F7E3E5E97E9F4C97E461DD93665] := 5;				// IO_Get_Std_Handle
	a[#1267DF8F97A5F83CB3F3] := 6;						// IO_Get_Args
	a[#24CFBF1F2F4BF17776D3CB7EEDB97774] := 7;				// IO_Get_Environment
	a[#1267DFA7D3965C3B6FCFE19775FA5970E4] := 8;				// IO_Stream_Open_Read
	a[#24CFBF4FA72CB876DFA5970E4BF430F2E9A70EC] := 9;			// IO_Stream_Read_Partial
	a[#933EFD3E9CB2E1DB7E7F0CBBAFD7E5A7A65] := 10;				// IO_Stream_Open_Write
	a[#1267DFA7D3965C3B6FD7E5A7A65] := 11;					// IO_Stream_Write
	a[#24CFBF4B2E1C97E1EFDDCF7ECCB7E861C7AF2F4] := 12;			// IO_Read_Console_Packet
	a[#1267DFAFCB4F4CB7E1EFDDCF7ECCB7E861C7AF2F4] := 13;			// IO_Write_Console_Packet
	a[#1267DFA1A7865] := 14;						// IO_Pipe
	a[#499F7E16CDF8F5DF9FC32EE] := 15;					// IO_Block_Open
	a[#499F7E16CDF8F5DFA5970E4] := 16;					// IO_Block_Read
	a[#24CFBF0B66FC7AEFD7E5A7A65] := 17;					// IO_Block_Write
	a[#933EFCCA7972EB] := 18;						// IO_LSeek
	a[#933EFC6A9CBAEEC787A65] := 19;					// IO_FTruncate
	a[#933EFC683B366FC787A65] := 20;					// IO_FAllocate
	a[#499F7E1ECDFBB2D2C3BB3E5] := 21;					// IO_CloneRange
	a[#933EFC6A7E7763] := 22;						// IO_FSync
	a[#1267DFA7E7763] := 23;						// IO_Sync
	a[#1267DFA5BF7F4BF134F2] := 24;						// IO_Root_Dir
	a[#1267DF99A715FA187A68] := 25;						// IO_Lib_Path
	a[#1267DF9FC32EEBF134F2] := 26;						// IO_Open_Dir
	a[#1267DFA5970E4BF134F2] := 27;						// IO_Read_Dir
	a[#1267DF89A795FA187A68] := 28;						// IO_Dir_Path
	a[#1267DF89377EED3D37F2BF43965E187965] := 29;				// IO_DMonitor_Prepare
	a[#933EFC49BBF769E9BF95FAF874F4] := 30;					// IO_DMonitor_Wait
	a[#1267DFA7D30F4] := 31;						// IO_Stat
	a[#933EFC6A7D30F4] := 32;						// IO_FStat
	a[#24CFBF1A9F4C3D2353] := 33;						// IO_FStatFS
	a[#24CFBF129F4C3D2353] := 34;						// IO_DStatFS
	a[#1267DFA5970E499A776B] := 35;						// IO_ReadLink
	a[#499F7E269E57E0E3E9A77EE] := 36;					// IO_Dir_Action
	a[#24CFBF134F2657E0E3E9A77EE] := 37;					// IO_Dir2_Action
	a[#499F7E272D3DB2F3] := 38;						// IO_Drives
	a[#1267DFA7D3A79] := 39;						// IO_Stty
	a[#1267DFA9D3CDFA7A7D65] := 40;						// IO_Tty_Size
	a[#499F7EA74F37E161C7AF3F2DFD7764] := 41;				// IO_Tty_Background
	a[#499F7EA74F37E36FE5973F2DFD7764] := 42;				// IO_Tty_Foreground
	a[#933EFD59D876E5] := 43;						// IO_UName
	a[#24CFBF1F2F491BF9F49D876E5] := 44;					// IO_GetHostName
	a[#933EFD3E187BEE] := 45;						// IO_Spawn
	a[#1267DFAF874F4] := 46;						// IO_Wait
	a[#24CFBF1F2F4A9A76E5] := 47;						// IO_GetTime
	a[#499F7EA69DB96A6F8787665DD930F2] := 48;				// IO_TimeToCalendar
	a[#499F7E1E1D997764C3CAA6FA9A76E5] := 49;				// IO_CalendarToTime
	a[#933EFD3D9972F0] := 50;						// IO_Sleep
	a[#24CFBF07779] := 51;							// IO_Any
	a[#933EFCECBDB2F2] := 52;						// IO_Never
	a[#1267DF8DBF96B] := 53;						// IO_Fork
	a[#1267DF83D37EDD38EFC5DDD32F2] := 54;					// IO_Atomic_Enter
	a[#24CFBF07A6FDBA71DF8BE34F4] := 55;					// IO_Atomic_Exit
	a[#933EFD7C3A7A5F8DBF95F8997965CD97965DD8F2E4] := 56;			// IO_Wait_For_Dereferenced
	a[#933EFC9DDD2FD4DF7E761E9A7B65] := 57;					// IO_Int_To_Native
	a[#933EFCEC3D34F6CB7EA6FBF27774] := 58;					// IO_Native_To_Int
	a[#499F7E9EFC7AF2F4] := 59;						// IO_Socket
	a[#24CFBF0F7EEDD971F4] := 60;						// IO_Connect
	a[#1267DF87BF76ECB8FA5FAF874F4] := 61;					// IO_Connect_Wait
	a[#1267DF85A7764] := 62;						// IO_Bind
	a[#499F7E669E7D32EE] := 63;						// IO_Listen
	a[#499F7E0E3C797874] := 64;						// IO_Accept
	a[#933EFC7CBD2FD3DF8F5DF9D876E5] := 65;					// IO_Get_Sock_Name
	a[#933EFC7CBD2FD0CB9795F9D876E5] := 66;					// IO_Get_Peer_Name
	a[#933EFD2CB8FB5F8DCB7ED] := 67;					// IO_Recv_From
	a[#24CFBF4F2EEC97EA6F] := 68;						// IO_Send_To
	a[#1267DF8F97A5FA7BF1EBBF3F874] := 69;					// IO_Get_Sock_Opt
	a[#1267DFA797A5FA7BF1EBBF3F874] := 70;					// IO_Set_Sock_Opt
	a[#933EFC7CBD2FC1C99395F93BB36F] := 71;					// IO_Get_Addr_Info
	a[#933EFC7CBD2FCEC3B72DF93BB36F] := 72;					// IO_Get_Name_Info
	a[#1267DF9BCF3D1EB97AE5BF3B2F7] := 73;					// IO_MsgQueue_New
	a[#933EFCDE79E8F5CBD72DFA797764] := 74;					// IO_MsgQueue_Send
	a[#1267DF9BCF3D1EB97AE5BF4B2E3CBA7B65] := 75;				// IO_MsgQueue_Receive
	a[#933EFCDE79E8F5CBD72DFAF874F4] := 76;					// IO_MsgQueue_Wait
	a[#1267DF9BCF3D1EB97AE5BF279DF9DBF765DBC3A79] := 77;			// IO_MsgQueue_Is_Nonempty
	a[#933EFD3D39F761D97E461DD93665] := 78;					// IO_Signal_Handle
	a[#499F7E9E9CFBB0ECBF43965E187965] := 79;				// IO_Signal_Prepare
	a[#24CFBF4F4E7DD8765FAF874F4] := 80;					// IO_Signal_Wait
	a[#499F7E1EFDDCFAEDCB7E861E5876E5E997973] := 81;			// IO_Consume_Parameters
	a[#1267DF99BF0E4BF4396FCFCB0ED] := 82;					// IO_Load_Program
	a[#1267DF8F97A5F8DD7763E9A77EEBF43A72] := 83;				// IO_Get_Function_Ptr
	a[#1267DF8F97A5FA7D7146EBBB1F4D3BF773] := 84;				// IO_Get_SubFunctions
	a[#1267DF99BF0E4BF3F874D3B74FACB92FD0C7BF265] := 85;			// IO_Load_Optimized_Pcode
	a[#24CFBF4B2E7D3CFA65E57E265E197764CBBB1E5] := 86;			// IO_Register_Dependence
	a[#933EFC4CB9785F8BDB0EC] := 87;					// IO_Deep_Eval
	a[#1267DF8BDB0ECEB87A65] := 88;						// IO_Evaluate
	a[#933EFC4CB8BAE7] := 89;						// IO_Debug
	a[#499F7E9F4C38F5D4E5871E5] := 90;					// IO_StackTrace
	a[#1267DFA9CB0E3CB0FA6C] := 91;						// IO_TraceCtl
	a[#499F7E346937E3E5E97E9E9F596FC1D9A73EEDB97774] := 92;			// IO_FFI_Get_Size_Alignment
	a[#1267DF8D1A4DF87CB2E1E996FD3E9CBAE3E9D7965] := 93;			// IO_FFI_Create_Structure
	a[#1267DF8D1A4DFA7D3975C7D3AF2CB7E7E6CDCF2F4] := 94;			// IO_FFI_Structure_Offset
	a[#1267DF8D1A4DFA1BF5E5] := 95;						// IO_FFI_Poke
	a[#1267DF8D1A4DFA1972EB] := 96;						// IO_FFI_Peek
	a[#499F7E346937E86FD796FC1E5CB0F9] := 97;				// IO_FFI_Poke_Array
	a[#499F7E346937E865CBAEFC1E5CB0F9] := 98;				// IO_FFI_Peek_Array
	a[#1267DF8D1A4DF9187764D996FD4DF7E775DB8B2F2] := 99;			// IO_FFI_Handle_To_Number
	a[#1267DF8D1A4DF9DD76E2CBCAFD4DF7E461DD93665] := 100;			// IO_FFI_Number_To_Handle
	a[#24CFBF1A349BF0F965C3D32DF8DD7763E9A77EE] := 101;			// IO_FFI_Create_Function
	a[#933EFC68D26FC3C3B365F8DD7763E9A77EE] := 102;				// IO_FFI_Call_Function
	a[#24CFBF1A349BF17763DF932DFA5970EC] := 103;				// IO_FFI_Encode_Real
	a[#24CFBF1A349BF132E3DF932DFA5970EC] := 104;				// IO_FFI_Decode_Real
	a[#499F7E346937E265E7D3975C7D37F2BF3B2F7] := 105;			// IO_FFI_Destructor_New
	a[#24CFBF1A349BF132F3E9CBAE3E9BF95F83B366FC787A65] := 106;		// IO_FFI_Destructor_Allocate
	a[#24CFBF1A349BF132F3E9CBAE3E9BF95F8DCB2E5] := 107;			// IO_FFI_Destructor_Free
	a[#24CFBF1A349BF132F3E9CBAE3E9BF95F878766C] := 108;			// IO_FFI_Destructor_Call
	a[#933EFCE] := 109;							// IO_N

	a[#499F7E7F0CBBAFC6D9873DFA5970E4] := 1;				// IO_Open_Flag_Read
	a[#24CFBF3F865DD7E36CC39EFD7E5A7A65] := 2;				// IO_Open_Flag_Write
	a[#1267DF9FC32EEBF1B661CF7E0F0E197764] := 4;				// IO_Open_Flag_Append
	a[#1267DF9FC32EEBF1B661CF7E1F2CB87A65] := 8;				// IO_Open_Flag_Create
	a[#933EFCFE19775F8DB30E7BF37AF3E97E1F2CB87A65] := 16;			// IO_Open_Flag_Must_Create
	a[#24CFBF3F865DD7E36CC39EFCEDF7E36FD9B37F7] := 32;			// IO_Open_Flag_No_Follow
	a[#24CFBF3F865DD7E36CC39EFCE] := 64;					// IO_Open_Flag_N

	a[#499F7E9F4C3D2FC6D9873DF8997B4DC3AB7F2] := 1;				// IO_Stat_Flag_DevMajor
	a[#499F7E9F4C3D2FC6D9873DF8997B4DD3BB7F2] := 2;				// IO_Stat_Flag_DevMinor
	a[#24CFBF4FA61E97E36CC39EFC9DDBF265] := 4;				// IO_Stat_Flag_Inode
	a[#499F7E9F4C3D2FC6D9873DFA9E7865] := 8;				// IO_Stat_Flag_Type
	a[#499F7E9F4C3D2FC6D9873DF9BBF265] := 16;				// IO_Stat_Flag_Mode
	a[#24CFBF4FA61E97E36CC39EFCE99A776B] := 32;				// IO_Stat_Flag_NLink
	a[#933EFD3E987A5F8DB30E7BF564C4] := 64;					// IO_Stat_Flag_UID
	a[#933EFD3E987A5F8DB30E7BF1E4C4] := 128;				// IO_Stat_Flag_GID
	a[#24CFBF4FA61E97E36CC39EFD28997B4DC3AB7F2] := 256;			// IO_Stat_Flag_RDevMajor
	a[#24CFBF4FA61E97E36CC39EFD28997B4DD3BB7F2] := 512;			// IO_Stat_Flag_RDevMinor
	a[#499F7E9F4C3D2FC6D9873DFA7A7D65] := 1024;				// IO_Stat_Flag_Size
	a[#24CFBF4FA61E97E36CC39EFCFE1D34EDC3B24CFA7A7D65] := 2048;		// IO_Stat_Flag_OptimalIOSize
	a[#24CFBF4FA61E97E36CC39EFC1D9B37E3C3D32E4] := 4096;			// IO_Stat_Flag_Allocated
	a[#24CFBF4FA61E97E36CC39EFC1A9A76E5] := 8192;				// IO_Stat_Flag_ATime
	a[#24CFBF4FA61E97E36CC39EFCDA9A76E5] := 16384;				// IO_Stat_Flag_MTime
	a[#24CFBF4FA61E97E36CC39EFC3A9A76E5] := 32768;				// IO_Stat_Flag_CTime

	a[#499F7E9F4C3D2FD4F3C32DF8DA7665] := 1;				// IO_Stat_Type_File
	a[#24CFBF4FA61E97EA79E196FC4D3CB2E3E9BF979] := 2;			// IO_Stat_Type_Directory
	a[#499F7E9F4C3D2FD4F3C32DF99A776B] := 3;				// IO_Stat_Type_Link
	a[#499F7E9F4C3D2FD4F3C32DFA1A7865] := 4;				// IO_Stat_Type_Pipe
	a[#933EFD3E987A5FA9E7865BF0F461E5132F6] := 5;				// IO_Stat_Type_CharDev
	a[#499F7E9F4C3D2FD4F3C32DF85B37E3D7132F6] := 6;				// IO_Stat_Type_BlockDev
	a[#1267DFA7D30F4BF53CF0CB7E9EFC7AF2F4] := 7;				// IO_Stat_Type_Socket

	a[#933EFD3E987A46A77E36CC39EFC2A7A7D65] := 1;				// IO_StatFS_Flag_BSize
	a[#499F7E9F4C3D2353BF1B661CF7E372A7A7D65] := 2;				// IO_StatFS_Flag_FrSize
	a[#24CFBF4FA61E91A9DF8DB30E7BF1B954DFD30EC] := 4;			// IO_StatFS_Flag_FrTotal
	a[#499F7E9F4C3D2353BF1B661CF7E3728DCB2E5] := 8;				// IO_StatFS_Flag_FrFree
	a[#24CFBF4FA61E91A9DF8DB30E7BF1B941ED874EC] := 16;			// IO_StatFS_Flag_FrAvail
	a[#24CFBF4FA61E91A9DF8DB30E7BF27754DFD30EC] := 32;			// IO_StatFS_Flag_InTotal
	a[#499F7E9F4C3D2353BF1B661CF7E4EE8DCB2E5] := 64;			// IO_StatFS_Flag_InFree
	a[#24CFBF4FA61E91A9DF8DB30E7BF27741ED874EC] := 128;			// IO_StatFS_Flag_InAvail
	a[#1267DFA7D30F48D4EFC6D9873DF8D4E4E4] := 256;				// IO_StatFS_Flag_FSId
	a[#933EFD3E987A46A77E36CC39EFC6D9873F3] := 512;				// IO_StatFS_Flag_Flags
	a[#24CFBF4FA61E91A9DF8DB30E7BF3B0EDCB332EE] := 1024;			// IO_StatFS_Flag_NameLen

	a[#499F7E9F4C3D2353BF4EA5FA5970E49FBB679] := 1;				// IO_StatFS_ST_ReadOnly
	a[#1267DFA7D30F48D4EFD3A97E76FA7D74E4] := 2;				// IO_StatFS_ST_NoSuid
	a[#24CFBF4FA61E91A9DFA752FCEDF132F6] := 4;				// IO_StatFS_ST_NoDev
	a[#1267DFA7D30F48D4EFD3A97E76F8BE32E3] := 8;				// IO_StatFS_ST_NoExec
	a[#933EFD3E987A46A77E9D4BF4FCEEC7A396FDDBFAF3] := 16;			// IO_StatFS_ST_Synchronous
	a[#499F7E9F4C3D2353BF4EA5F9B8776499BF1EB] := 32;			// IO_StatFS_ST_MandLock
	a[#933EFD3E987A46A77E9D4BF3B7C1E9A76E5] := 64;				// IO_StatFS_ST_NoAtime
	a[#1267DFA7D30F48D4EFD3A97E76F89A7941E9A76E5] := 128;			// IO_StatFS_ST_NoDirAtime
	a[#499F7E9F4C3D2353BF4EA5FA597641E9A76E5] := 256;			// IO_StatFS_ST_RelAtime

	a[#24CFBF56761DB96FC6D9873DF83AB661BF5B2F2E7A77EE] := 1;		// IO_UName_Flag_Ajla_Version
	a[#933EFD59D876E5BF1B661CF7E36CC3DB7F2] := 2;				// IO_UName_Flag_Flavor
	a[#933EFD59D876E5BF1B661CF7E9F9E7D32ED] := 4;				// IO_UName_Flag_System
	a[#499F7EACEC3B72DF8DB30E7BF4B2ECCB879E5] := 8;				// IO_UName_Flag_Release
	a[#499F7EACEC3B72DF8DB30E7BF5B2F2E7A77EE] := 16;			// IO_UName_Flag_Version
	a[#499F7EACEC3B72DF8DB30E7BF370E3D1A7765] := 32;			// IO_UName_Flag_Machine

	a[#933EFC1C7D34EFDD7E96D] := 1;						// IO_Action_Rm
	a[#933EFC1C7D34EFDD7E96DBF134F2] := 2;					// IO_Action_Rm_Dir
	a[#933EFC1C7D34EFDD7E6EBBF134F2] := 3;					// IO_Action_Mk_Dir
	a[#499F7E0E3E9A77EEBF375DFA1A7865] := 4;				// IO_Action_Mk_Pipe
	a[#1267DF838FA69DFBAFCDD77E9EFC7AF2F4] := 5;				// IO_Action_Mk_Socket
	a[#933EFC1C7D34EFDD7E6EBBF0F461E5132F6] := 6;				// IO_Action_Mk_CharDev
	a[#499F7E0E3E9A77EEBF375DF85B37E3D7132F6] := 7;				// IO_Action_Mk_BlockDev
	a[#933EFC1C7D34EFDD7E6EBBF4FCED99A776B] := 8;				// IO_Action_Mk_SymLink
	a[#499F7E0E3E9A77EEBF375DF99A776B] := 9;				// IO_Action_Mk_Link
	a[#933EFC1C7D34EFDD7E965DD876E5] := 10;					// IO_Action_Rename
	a[#1267DF838FA69DFBAFC3D1377E4] := 11;					// IO_Action_ChMod
	a[#1267DF838FA69DFBAFC3D13FBEE] := 12;					// IO_Action_ChOwn
	a[#933EFC1C7D34EFDD7E643D13FBEE] := 13;					// IO_Action_LChOwn
	a[#1267DF838FA69DFBAFD5A9A76E5] := 14;					// IO_Action_UTime
	a[#933EFC1C7D34EFDD7E655A9A76E5] := 15;					// IO_Action_LUTime

	a[#933EFD3E9D3CDF8DB30E7BF4B0F7] := 1;					// IO_Stty_Flag_Raw
	a[#1267DFA7D3A79BF1B661CF7E76FCB8F46F] := 2;				// IO_Stty_Flag_Noecho
	a[#499F7E9F4E9E6FC6D9873DF9DBF9E9CFBB0EC] := 4;				// IO_Stty_Flag_Nosignal
	a[#1267DFA7D3A79BF1B661CF7E76F874A646] := 8;				// IO_Stty_Flag_NoCRLF

	a[#1971DFDDBF765] := 0;							// ec_none
	a[#1971DFE7E7763] := 1;							// ec_sync
	a[#CB8EFE1E7E7763] := 2;						// ec_async
	a[#32E3BFCFCF3C78766C] := 3;						// ec_syscall
	a[#1971DFCBE34F4] := 4;							// ec_exit
	a[#8B0EFCE] := 5;							// EC_N

	a[#10654C837E2D2A53E95F85069C5] := 1;					// AJLA_ERROR_BASE
	a[#197972DFCAFF5DDAF76FEFBAFE5E5CB7F2] := 1;				// error_unknown_error
	a[#197972DFCAFEFEBD2FEFCD7F6E5DBBF979] := 2;				// error_out_of_memory
	a[#197972DFCAFF3D3EB2DFDFDB2F2CDB37F7] := 3;				// error_size_overflow
	a[#197972DFCAFE9DDD2FF4DFBEFECC3CB3E5] := 4;				// error_int_too_large
	a[#CBCB96FE57F26FCBCF774BF9B4F4] := 5;					// error_doesnt_fit
	a[#197972DFCAFE9DDDB0ECD392FEFE197961E9A77EE] := 6;			// error_invalid_operation
	a[#197972DFCAFEEDFD2FF3EBC386FE5D32E4] := 7;				// error_not_supported
	a[#CBCB96FE57F765CF87A69ED96FE9DD932F8] := 8;				// error_negative_index
	a[#CBCB96FE57F4EEC997C5FDFD7A5FDF9AFF2C3BB3E5] := 9;			// error_index_out_of_range
	a[#65E5CB7F2BFBF874D3BF75FC9BF2F3DDD2FEDC3D31E8] := 10;			// error_option_doesnt_match
	a[#32F2E5BF95FE5971EFE592FE6D397664BFBB7F4BFA7769E9A70ECD3EB2E4] := 11;	// error_record_field_not_initialized
	a[#65E5CB7F2BF87972C3E6FE5DDD3979BFBB7F4BFA7769E9A70ECD3EB2E4] := 12;	// error_array_entry_not_initialized
	a[#197972DFCAFEEDFD2FE6DFD7764] := 13;					// error_not_found
	a[#197972DFCAFEEDFBAFE1C5CF7ECEBD32DFE187A68] := 14;			// error_non_absolute_path
	a[#197972DFCAFE1C5BF974] := 15;						// error_abort
	a[#65E5CB7F2BFBB0EE] := 16;						// error_nan
	a[#32F2E5BF95FD3BB369DDA7A79] := 17;					// error_infinity
	a[#32F2E5BF95FE7E79F4CBB6FF2CBD3AF2DD9725FD3BBB61D9A725FC987A61] := 18;	// error_system_returned_invalid_data
	a[#CBCB96FE57F1EFDBC34ECCBCAFE5E5CB7F2] := 19;				// error_compiler_error
	a[#65E5CB7F2BFBF874D3B74FACBCAFE5E5CB7F2] := 20;			// error_optimizer_error
	a[#CBCB96FE57F9F9E7D32ED] := 21;					// error_system
	a[#197972DFCAFE5E5CB76F] := 22;						// error_errno
	a[#65E5CB7F2BFBF9B2] := 23;						// error_os2
	a[#CBCB96FE57F7F3657F9EFC7AF2F4] := 24;					// error_os2_socket
	a[#197972DFCAFF7D3B99B2] := 25;						// error_win32
	a[#65E5CB7F2BFA2FE5E5CB76F] := 26;					// error_h_errno
	a[#65E5CB7F2BF9F0E9] := 27;						// error_gai
	a[#CBCB96FE57F9F5C5C396FC7979F3] := 28;					// error_subprocess
	a[#197972DFCAFECD38B961E5E6FEEDFD2FE6DFD7764] := 29;			// error_library_not_found
	a[#32F2E5BF95FE7E76E2DFB2FEEDFD2FE6DFD7764] := 30;			// error_symbol_not_found
	a[#32F2E5BF95FCBE34F4] := 31;						// error_exit
	a[#32F2E5BF95FEBCF2F2] := 32;						// error_user
	a[#197972DFCAFF5E797932] := 33;						// error_user2
	a[#197972DFCAFF5E797933] := 34;						// error_user3
	a[#832A641BF169529F4AFCE] := 35;					// AJLA_ERROR_N

	a[#53B34EA459B7E2D2A53E95F85069C5] := 1;				// SYSTEM_ERROR_BASE
	a[#39F9E7D32EDBF97972DFCAFE5E19796D] := 1;				// system_error_eperm
	a[#1CFCF3E9976DFCBCB96FE57F2EEDF97774] := 2;				// system_error_enoent
	a[#39F9E7D32EDBF97972DFCAFE5E7CB1E8] := 3;				// system_error_esrch
	a[#39F9E7D32EDBF97972DFCAFE5D3BBA72] := 4;				// system_error_eintr
	a[#E7E79F4CBB6FE5E5CB7F2BF974EF] := 5;					// system_error_eio
	a[#39F9E7D32EDBF97972DFCAFE5DDE34EF] := 6;				// system_error_enxio
	a[#39F9E7D32EDBF97972DFCAFE5658B4E7] := 7;				// system_error_e2big
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FCBE32E3] := 8;				// system_error_enoexec
	a[#39F9E7D32EDBF97972DFCAFE5C587266] := 9;				// system_error_ebadf
	a[#1CFCF3E9976DFCBCB96FE57F2E3D1A7664] := 10;				// system_error_echild
	a[#1CFCF3E9976DFCBCB96FE57F2E1CF874EE] := 11;				// system_error_eagain
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFB72ED] := 12;				// system_error_enomem
	a[#1CFCF3E9976DFCBCB96FE57F2E1C78F2F3] := 13;				// system_error_eacces
	a[#1CFCF3E9976DFCBCB96FE57F2E6C3D7674] := 14;				// system_error_efault
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FE98B66B] := 15;				// system_error_enotblk
	a[#39F9E7D32EDBF97972DFCAFE5C5D79F9] := 16;				// system_error_ebusy
	a[#1CFCF3E9976DFCBCB96FE57F2E5F1A79F4] := 17;				// system_error_eexist
	a[#39F9E7D32EDBF97972DFCAFE5F1932F6] := 18;				// system_error_exdev
	a[#1CFCF3E9976DFCBCB96FE57F2EEDF932F6] := 19;				// system_error_enodev
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FE9934F2] := 20;				// system_error_enotdir
	a[#1CFCF3E9976DFCBCB96FE57F2E9E7934F2] := 21;				// system_error_eisdir
	a[#1CFCF3E9976DFCBCB96FE57F2E9DDDB0EC] := 22;				// system_error_einval
	a[#1CFCF3E9976DFCBCB96FE57F2EECDA7665] := 23;				// system_error_enfile
	a[#1CFCF3E9976DFCBCB96FE57F2EDCDA7665] := 24;				// system_error_emfile
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFD3A79] := 25;				// system_error_enotty
	a[#E7E79F4CBB6FE5E5CB7F2BF97A78E98B9F9] := 26;				// system_error_etxtbsy
	a[#39F9E7D32EDBF97972DFCAFE5CD8B4E7] := 27;				// system_error_efbig
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFCF863] := 28;				// system_error_enospc
	a[#1CFCF3E9976DFCBCB96FE57F2F3E1A7865] := 29;				// system_error_espipe
	a[#39F9E7D32EDBF97972DFCAFE5E5BF373] := 30;				// system_error_erofs
	a[#1CFCF3E9976DFCBCB96FE57F2EDD9A776B] := 31;				// system_error_emlink
	a[#39F9E7D32EDBF97972DFCAFE5E1A7865] := 32;				// system_error_epipe
	a[#73F3CFA65DB7F2F2E5BF95FCB937ED] := 33;				// system_error_edom
	a[#1CFCF3E9976DFCBCB96FE57F2F2C3BB3E5] := 34;				// system_error_erange
	a[#E7E79F4CBB6FE5E5CB7F2BF97265C39366B] := 35;				// system_error_edeadlk
	a[#73F3CFA65DB7F2F2E5BF95FCBBB0EDCBD37EFD9BF767] := 36;			// system_error_enametoolong
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFB31EB] := 37;				// system_error_enolck
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFCFCF3] := 38;				// system_error_enosys
	a[#39F9E7D32EDBF97972DFCAFE5DDBFA65DBC3A79] := 39;			// system_error_enotempty
	a[#39F9E7D32EDBF97972DFCAFE5D9BF7F0] := 40;				// system_error_eloop
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFB79E7] := 41;				// system_error_enomsg
	a[#39F9E7D32EDBF97972DFCAFE5D39396D] := 42;				// system_error_eidrm
	a[#1CFCF3E9976DFCBCB96FE57F2E3D1CB767] := 43;				// system_error_echrng
	a[#73F3CFA65DB7F2F2E5BF95FCBB196EE7E7763] := 44;			// system_error_el2nsync
	a[#1CFCF3E9976DFCBCB96FE57F2EC67A3674] := 45;				// system_error_el3hlt
	a[#1CFCF3E9976DFCBCB96FE57F2EC67CB9F4] := 46;				// system_error_el3rst
	a[#1CFCF3E9976DFCBCB96FE57F2ECDDCB767] := 47;				// system_error_elnrng
	a[#E7E79F4CBB6FE5E5CB7F2BF97AEEC3D31E8] := 48;				// system_error_eunatch
	a[#1CFCF3E9976DFCBCB96FE57F2EEDF8F9E9] := 49;				// system_error_enocsi
	a[#1CFCF3E9976DFCBCB96FE57F2EC65A3674] := 50;				// system_error_el2hlt
	a[#39F9E7D32EDBF97972DFCAFE5C587265] := 51;				// system_error_ebade
	a[#39F9E7D32EDBF97972DFCAFE5C587272] := 52;				// system_error_ebadr
	a[#1CFCF3E9976DFCBCB96FE57F2F8CDD766C] := 53;				// system_error_exfull
	a[#1CFCF3E9976DFCBCB96FE57F2EEDF8776F] := 54;				// system_error_enoano
	a[#E7E79F4CBB6FE5E5CB7F2BF97161C9CB8E3] := 55;				// system_error_ebadrqc
	a[#E7E79F4CBB6FE5E5CB7F2BF97161C9CF674] := 56;				// system_error_ebadslt
	a[#1CFCF3E9976DFCBCB96FE57F2E2CDBF774] := 57;				// system_error_ebfont
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFCFA72] := 58;				// system_error_enostr
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FC987A61] := 59;				// system_error_enodata
	a[#39F9E7D32EDBF97972DFCAFE5E9A76E5] := 60;				// system_error_etime
	a[#39F9E7D32EDBF97972DFCAFE5DDBF9F2] := 61;				// system_error_enosr
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFBB2F4] := 62;				// system_error_enonet
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFC35E7] := 63;				// system_error_enopkg
	a[#E7E79F4CBB6FE5E5CB7F2BF97965DBBFA65] := 64;				// system_error_eremote
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FD9A776B] := 65;				// system_error_enolink
	a[#73F3CFA65DB7F2F2E5BF95FCB87276] := 66;				// system_error_eadv
	a[#1CFCF3E9976DFCBCB96FE57F2F3E5B7774] := 67;				// system_error_esrmnt
	a[#39F9E7D32EDBF97972DFCAFE5C7BF6ED] := 68;				// system_error_ecomm
	a[#1CFCF3E9976DFCBCB96FE57F2F0E5BFA6F] := 69;				// system_error_eproto
	a[#39F9E7D32EDBF97972DFCAFE5DBD7674D3A37F0] := 70;			// system_error_emultihop
	a[#E7E79F4CBB6FE5E5CB7F2BF9726FE9937F4] := 71;				// system_error_edotdot
	a[#E7E79F4CBB6FE5E5CB7F2BF97161C9B79E7] := 72;				// system_error_ebadmsg
	a[#39F9E7D32EDBF97972DFCAFE5DFDB2F2CDB37F7] := 73;			// system_error_eoverflow
	a[#73F3CFA65DB7F2F2E5BF95FCBBB7F4EBBB4F1] := 74;			// system_error_enotuniq
	a[#1CFCF3E9976DFCBCB96FE57F2E2C393364] := 75;				// system_error_ebadfd
	a[#E7E79F4CBB6FE5E5CB7F2BF97965DB8F467] := 76;				// system_error_eremchg
	a[#E7E79F4CBB6FE5E5CB7F2BF97669C5871E3] := 77;				// system_error_elibacc
	a[#E7E79F4CBB6FE5E5CB7F2BF97669C58B0E4] := 78;				// system_error_elibbad
	a[#E7E79F4CBB6FE5E5CB7F2BF97669C5CF1EE] := 79;				// system_error_elibscn
	a[#E7E79F4CBB6FE5E5CB7F2BF97669C5B70F8] := 80;				// system_error_elibmax
	a[#73F3CFA65DB7F2F2E5BF95FCBB34E2CBE32E3] := 81;			// system_error_elibexec
	a[#1CFCF3E9976DFCBCB96FE57F2E9D9CF2F1] := 82;				// system_error_eilseq
	a[#73F3CFA65DB7F2F2E5BF95FCBCB2F3E987974] := 83;			// system_error_erestart
	a[#73F3CFA65DB7F2F2E5BF95FCBCFA72E1A7865] := 84;			// system_error_estrpipe
	a[#1CFCF3E9976DFCBCB96FE57F2F5E797973] := 85;				// system_error_eusers
	a[#73F3CFA65DB7F2F2E5BF95FCBBB7F4E7BF1EB] := 86;			// system_error_enotsock
	a[#73F3CFA65DB7F2F2E5BF95FCB932F3E987264E5CB2F1] := 87;			// system_error_edestaddrreq
	a[#73F3CFA65DB7F2F2E5BF95FCBB79E7E7A7D65] := 88;			// system_error_emsgsize
	a[#1CFCF3E9976DFCBCB96FE57F2F0E5BFA6FE9E7865] := 89;			// system_error_eprototype
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FE1CB7F4DFBF874] := 90;			// system_error_enoprotoopt
	a[#E7E79F4CBB6FE5E5CB7F2BF97872DFD37EEDFCFAF0E1BF974] := 91;		// system_error_eprotonosupport
	a[#E7E79F4CBB6FE5E5CB7F2BF979EFC7AFA6EDFCFAF0E1BF974] := 92;		// system_error_esocktnosupport
	a[#1CFCF3E9976DFCBCB96FE57F2EFE1BB7F4E7D7870] := 93;			// system_error_eopnotsupp
	a[#73F3CFA65DB7F2F2E5BF95FCBC336EDFCFAF0E1BF974] := 94;			// system_error_epfnosupport
	a[#73F3CFA65DB7F2F2E5BF95FCB8736EDFCFAF0E1BF974] := 95;			// system_error_eafnosupport
	a[#1CFCF3E9976DFCBCB96FE57F2E1C993969DDD79E5] := 96;			// system_error_eaddrinuse
	a[#39F9E7D32EDBF97972DFCAFE5C393272DDBFA61ED874EC] := 97;		// system_error_eaddrnotavail
	a[#73F3CFA65DB7F2F2E5BF95FCBBB2F4C9BFBEE] := 98;			// system_error_enetdown
	a[#E7E79F4CBB6FE5E5CB7F2BF97765E9D7772CB871E8] := 99;			// system_error_enetunreach
	a[#39F9E7D32EDBF97972DFCAFE5DD97A72CBCF2F4] := 100;			// system_error_enetreset
	a[#73F3CFA65DB7F2F2E5BF95FCB8F7EEDD8716FE5D32E4] := 101;		// system_error_econnaborted
	a[#1CFCF3E9976DFCBCB96FE57F2E3DFBB772CBCF2F4] := 102;			// system_error_econnreset
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FC5D7373] := 103;				// system_error_enobufs
	a[#E7E79F4CBB6FE5E5CB7F2BF974F3C7BF76E] := 104;				// system_error_eisconn
	a[#73F3CFA65DB7F2F2E5BF95FCBBB7F4C7BF76E] := 105;			// system_error_enotconn
	a[#39F9E7D32EDBF97972DFCAFE5E7A3AF4C9BFBEE] := 106;			// system_error_eshutdown
	a[#73F3CFA65DB7F2F2E5BF95FCBD37EFDB87779E597373] := 107;		// system_error_etoomanyrefs
	a[#39F9E7D32EDBF97972DFCAFE5E9A76E5C9BFAF4] := 108;			// system_error_etimedout
	a[#73F3CFA65DB7F2F2E5BF95FCB8F7EEDDCB2E6EBCF2E4] := 109;		// system_error_econnrefused
	a[#39F9E7D32EDBF97972DFCAFE5D1BF9F4C9BFBEE] := 110;			// system_error_ehostdown
	a[#73F3CFA65DB7F2F2E5BF95FCBA37F3E9D7772CB871E8] := 111;		// system_error_ehostunreach
	a[#73F3CFA65DB7F2F2E5BF95FCB87672CB87279] := 112;			// system_error_ealready
	a[#E7E79F4CBB6FE5E5CB7F2BF974EEE1CB7E7E5979F3] := 113;			// system_error_einprogress
	a[#1CFCF3E9976DFCBCB96FE57F2F3E987665] := 114;				// system_error_estale
	a[#E7E79F4CBB6FE5E5CB7F2BF97AE3D9970EE] := 115;				// system_error_euclean
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FE9BB0ED] := 116;				// system_error_enotnam
	a[#E7E79F4CBB6FE5E5CB7F2BF97761ED874EC] := 117;				// system_error_enavail
	a[#1CFCF3E9976DFCBCB96FE57F2E9E7BB0ED] := 118;				// system_error_eisnam
	a[#39F9E7D32EDBF97972DFCAFE5E5976EFE9974EF] := 119;			// system_error_eremoteio
	a[#1CFCF3E9976DFCBCB96FE57F2E4E3D77F4] := 120;				// system_error_edquot
	a[#39F9E7D32EDBF97972DFCAFE5DDBF6E5C9A7AED] := 121;			// system_error_enomedium
	a[#E7E79F4CBB6FE5E5CB7F2BF976E5C9A7AEDE9E7865] := 122;			// system_error_emediumtype
	a[#39F9E7D32EDBF97972DFCAFE5C787763CBB32E4] := 123;			// system_error_ecanceled
	a[#1CFCF3E9976DFCBCB96FE57F2EEDFAF2F9] := 124;				// system_error_enokey
	a[#E7E79F4CBB6FE5E5CB7F2BF975E5F397C70D3CB2E4] := 125;			// system_error_ekeyexpired
	a[#E7E79F4CBB6FE5E5CB7F2BF975E5F3CB2F6DFAF2E4] := 126;			// system_error_ekeyrevoked
	a[#73F3CFA65DB7F2F2E5BF95FCBAF2F9E597565C7D32E4] := 127;		// system_error_ekeyrejected
	a[#1CFCF3E9976DFCBCB96FE57F2EFEFBB2F2C9970E4] := 128;			// system_error_eownerdead
	a[#E7E79F4CBB6FE5E5CB7F2BF9776FE9CB2E3DFDB2F2C38B665] := 129;		// system_error_enotrecoverable
	a[#E7E79F4CBB6FE5E5CB7F2BF97966D7A766C] := 130;				// system_error_erfkill
	a[#39F9E7D32EDBF97972DFCAFE5D1DF86FD3CF7EE] := 131;			// system_error_ehwpoison
	a[#29D9A7522CDBF169529F4AFCE] := 132;					// SYSTEM_ERROR_N

	return a;
]
